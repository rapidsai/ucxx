# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: conda
    matrix:
      cuda: ["12.9", "13.0"]
      arch: [x86_64, aarch64]
    includes:
      - build_cpp
      - build_python_ucxx
      - checks
      - cuda
      - cuda_version
      - dev
      - docs
      - py_version
      - rapids_build_setuptools
      - rapids_build_skbuild
      - run_python_ucxx
      - run_python_distributed_ucxx
      - test_cpp
      - test_python_ucxx
      - test_python_distributed_ucxx
      - depends_on_cudf
      - depends_on_cupy
      - depends_on_rmm
      - depends_on_ucx_run
  test_cpp:
    output: none
    includes:
      - cuda_version
      - test_cpp
      - depends_on_libucxx
      - depends_on_libucxx_examples
      - depends_on_libucxx_tests
  test_python:
    output: none
    includes:
      - cuda_version
      - py_version
      - test_python_ucxx
      - depends_on_cupy
      - depends_on_cudf
      - depends_on_libucxx
      - depends_on_ucxx
      - depends_on_ucxx_tests
  test_python_distributed:
    output: none
    includes:
      - cuda_version
      - py_version
      - test_python_distributed_ucxx
      - depends_on_cupy
      - depends_on_cudf
      - depends_on_libucxx
      - depends_on_ucxx
      - depends_on_distributed_ucxx
  checks:
    output: none
    includes:
      - checks
      - dev
      - py_version
  docs:
    output: none
    includes:
      - docs
      - py_version
      - depends_on_libucxx
      - depends_on_ucxx
  py_build_libucxx:
    output: pyproject
    pyproject_dir: python/libucxx
    extras:
      table: build-system
    includes:
      - rapids_build_skbuild
  py_rapids_build_libucxx:
    output: pyproject
    pyproject_dir: python/libucxx
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - build_cpp
      - depends_on_librmm
      - depends_on_ucx_build
  py_run_libucxx:
    output: pyproject
    pyproject_dir: python/libucxx
    extras:
      table: project
    includes:
      - depends_on_librmm
      - depends_on_ucx_run
  py_build_ucxx:
    output: pyproject
    pyproject_dir: python/ucxx
    extras:
      table: build-system
    includes:
      - rapids_build_skbuild
  py_rapids_build_ucxx:
    output: pyproject
    pyproject_dir: python/ucxx
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - build_python_ucxx
      - depends_on_librmm
      - depends_on_libucxx
      - depends_on_rmm
  py_run_ucxx:
    output: pyproject
    pyproject_dir: python/ucxx
    extras:
      table: project
    includes:
      - run_python_ucxx
      - depends_on_libucxx
      - depends_on_rmm
  py_test_ucxx:
    output: pyproject
    pyproject_dir: python/ucxx
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_ucxx
      - depends_on_cupy
      - depends_on_cudf
  py_build_distributed_ucxx:
    output: pyproject
    pyproject_dir: python/distributed-ucxx
    extras:
      table: build-system
    includes:
      - rapids_build_setuptools
  py_run_distributed_ucxx:
    output: pyproject
    pyproject_dir: python/distributed-ucxx
    extras:
      table: project
    includes:
      - run_python_distributed_ucxx
      - depends_on_ucxx
  py_test_distributed_ucxx:
    output: pyproject
    pyproject_dir: python/distributed-ucxx
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_distributed_ucxx
      - depends_on_cupy
      - depends_on_cudf
channels:
  - rapidsai
  - rapidsai-nightly
  - conda-forge
dependencies:
  build_cpp:
    common:
      - output_types: conda
        packages:
          - c-compiler
          - cxx-compiler
          - &cmake_ver cmake>=3.26.4,!=3.30.0
          - librmm==25.12.*,>=0.0.0a0
          - ninja
      - output_types: [requirements, pyproject]
        packages:
          - *cmake_ver
          - ninja
  build_python_ucxx:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - *cmake_ver
          - cython>=3.0.0
          - ninja
  rapids_build_skbuild:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &rapids_build_backend rapids-build-backend>=0.4.0,<0.5.0.dev0
      - output_types: conda
        packages:
          - scikit-build-core>=0.10.0
      - output_types: [requirements, pyproject]
        packages:
          - scikit-build-core[pyproject]>=0.10.0
  rapids_build_setuptools:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - *rapids_build_backend
          - setuptools>=64.0.0
  checks:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
  cuda_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.0"
            packages:
              - cuda-version=12.0
          - matrix:
              cuda: "12.2"
            packages:
              - cuda-version=12.2
          - matrix:
              cuda: "12.5"
            packages:
              - cuda-version=12.5
          - matrix:
              cuda: "12.8"
            packages:
              - cuda-version=12.8
          - matrix:
              cuda: "12.9"
            packages:
              - cuda-version=12.9
          - matrix:
              cuda: "13.0"
            packages:
              - cuda-version=13.0
  cuda:
    common:
      - output_types: [conda]
        packages:
          - cuda-cudart-dev
          - cuda-nvcc
  dev:
    common:
      - output_types: [conda]
        packages:
          # These packages are useful for development but not otherwise required to build/run
          # RAPIDS
          - pip
          - dask-cuda==25.12.*,>=0.0.0a0
          - dask-cudf==25.12.*,>=0.0.0a0
          # UCX Build
          - libtool
          - automake
          - autoconf
          # UCXX Build
          - pkg-config
          # Docs Build
          - &doxygen doxygen=1.9.1 # pre-commit hook needs a specific version.
  docs:
    common:
      - output_types: [conda]
        packages:
          - *doxygen
          - make
          # Minimum version for safe parallel writing again.
          # https://github.com/pydata/pydata-sphinx-theme/pull/1859
          # https://github.com/pydata/pydata-sphinx-theme/releases/tag/v0.15.4
          - pydata-sphinx-theme>=0.15.4
          # Needed for safe parallel writes as with the pydata-sphinx-theme pin above
          # https://github.com/sphinx-doc/sphinx/issues/12409
          # https://github.com/sphinx-doc/sphinx/pull/12888
          # https://github.com/sphinx-doc/sphinx/releases/tag/v8.1.0
          - sphinx>=8.1.0
  py_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
              py: "3.11"
            packages:
              - python=3.11
          - matrix:
              py: "3.12"
            packages:
              - python=3.12
          - matrix:
              py: "3.13"
            packages:
              - python=3.13
          - matrix:
            packages:
              - python>=3.10,<3.14
  run_python_ucxx:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &numpy numpy>=1.23,<3.0a0
          # 'nvidia-ml-py' provides the 'pynvml' module
          - nvidia-ml-py>=12
      - output_types: [conda]
        packages:
          - &numba_cuda numba-cuda>=0.19.1,<0.20.0a0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - &numba_cuda_cu12 numba-cuda[cu12]>=0.19.1,<0.20.0a0
          # fallback to CUDA 13 versions if 'cuda' is '13.*' or not provided
          - matrix:
            packages:
              - &numba_cuda_cu13 numba-cuda[cu13]>=0.19.1,<0.20.0a0
  run_python_distributed_ucxx:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - rapids-dask-dependency==25.12.*,>=0.0.0a0
          - pyyaml>=6
      - output_types: [conda]
        packages:
          - *numba_cuda
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - *numba_cuda_cu12
          # fallback to CUDA 13 versions if 'cuda' is '13.*' or not provided
          - matrix:
            packages:
              - *numba_cuda_cu13
  test_cpp:
    common:
      - output_types: conda
        packages:
          - *cmake_ver
  test_python_ucxx:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - cloudpickle
          - pytest
          - pytest-asyncio>=1.0.0
          - pytest-rerunfailures!=16.0.0  # See https://github.com/pytest-dev/pytest-rerunfailures/issues/302
          - rapids-dask-dependency==25.12.*,>=0.0.0a0
  test_python_distributed_ucxx:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - *numpy
          - pytest
          - pytest-rerunfailures!=16.0.0  # See https://github.com/pytest-dev/pytest-rerunfailures/issues/302
  depends_on_cupy:
    common:
      - output_types: conda
        packages:
          - cupy>=13.6.0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - cupy-cuda12x>=13.6.0
          # fallback to CUDA 13 versions if 'cuda' is '13.*' or not provided
          - matrix:
            packages:
              - &cupy_cuda13 cupy-cuda13x>=13.6.0
  depends_on_librmm:
    common:
      - output_types: conda
        packages:
          - &librmm_unsuffixed librmm==25.12.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - librmm-cu12==25.12.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - librmm-cu13==25.12.*,>=0.0.0a0
          - {matrix: null, packages: [*librmm_unsuffixed]}
  depends_on_rmm:
    common:
      - output_types: conda
        packages:
          - &rmm_unsuffixed rmm==25.12.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - rmm-cu12==25.12.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - rmm-cu13==25.12.*,>=0.0.0a0
          - {matrix: null, packages: [*rmm_unsuffixed]}
  depends_on_cudf:
    common:
      - output_types: [conda]
        packages:
          - &cudf_unsuffixed cudf==25.12.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - cudf-cu12==25.12.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
            packages:
              - cudf-cu13==25.12.*,>=0.0.0a0
          - {matrix: null, packages: [*cudf_unsuffixed]}
  depends_on_distributed_ucxx:
    common:
      - output_types: conda
        packages:
          - distributed-ucxx==0.47.*,>=0.0.0a0
  depends_on_libucxx:
    common:
      - output_types: conda
        packages:
          - &libucxx_unsuffixed libucxx==0.47.*,>=0.0.0a0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - libucxx-cu12==0.47.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - libucxx-cu13==0.47.*,>=0.0.0a0
          - matrix:
            packages:
              - *libucxx_unsuffixed
  depends_on_libucxx_examples:
    common:
      - output_types: conda
        packages:
          - libucxx-examples==0.47.*,>=0.0.0a0
  depends_on_libucxx_tests:
    common:
      - output_types: conda
        packages:
          - libucxx-tests==0.47.*,>=0.0.0a0
  depends_on_ucxx:
    common:
      - output_types: conda
        packages:
          - &ucxx_unsuffixed ucxx==0.47.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - ucxx-cu12==0.47.*,>=0.0.0a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - ucxx-cu13==0.47.*,>=0.0.0a0
          - {matrix: null, packages: [*ucxx_unsuffixed]}
  depends_on_ucxx_tests:
    common:
      - output_types: conda
        packages:
          - ucxx-tests==0.47.*,>=0.0.0a0
  depends_on_ucx_build:
    common:
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [conda]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - ucx==1.17.0
          # build against 1.19.0 on CUDA 13 (and make that the default when 'cuda' filter is not provided)
          - matrix:
            packages:
              - ucx==1.19.0
      # very tight >=x.x.x,<x.x.(x+1) on these wheel dependencies, instead of '==',
      # to allow for installation of post release like 1.19.0.post1
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - libucx-cu12>=1.17.0,<1.17.1a0
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - libucx-cu13>=1.19.0,<1.19.1a0
          - matrix:
            packages:
              - libucx>=1.19.0,<1.19.1a0
  depends_on_ucx_run:
    common:
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [conda]
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - ucx>=1.17.0,<1.20
          # require at least 1.19.0 on CUDA 13 (and make that the default when 'cuda' filter is not provided)
          - matrix:
            packages:
              - ucx>=1.19.0,<1.20
      - output_types: [requirements, pyproject]
        matrices:
          - matrix:
              cuda: "12.*"
              cuda_suffixed: "true"
            packages:
              - libucx-cu12>=1.17.0,<1.20
          - matrix:
              cuda: "13.*"
              cuda_suffixed: "true"
            packages:
              - libucx-cu13>=1.19.0,<1.20
          # require at least 1.19.0 (CUDA 13 floor) if 'cuda' filter is not provided
          - matrix:
            packages:
              - libucx>=1.19.0,<1.20
