name: pr
on:
  push:
    branches:
      - "pull-request/[0-9]+"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  pr-builder:
    needs:
      - check-nightly-ci
      - changed-files
      - checks
      - conda-cpp-build
      - devcontainer
      - docs-build
      - conda-cpp-tests
      - conda-python-tests
      - conda-python-distributed-tests
      - wheel-build-libucxx
      - wheel-build-ucxx
      - wheel-tests-ucxx
      - wheel-build-distributed-ucxx
      - wheel-tests-distributed-ucxx
      - telemetry-setup
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/pr-builder.yaml@cuda13.0
    if: always()
    with:
      needs: ${{ toJSON(needs) }}
  check-nightly-ci:
    runs-on: ubuntu-latest
    env:
      RAPIDS_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check if nightly CI is passing
        uses: rapidsai/shared-actions/check_nightly_success/dispatch@main
        with:
          repo: ucxx
  telemetry-setup:
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      OTEL_SERVICE_NAME: "pr-ucxx"
    steps:
      - name: Telemetry setup
        # This gate is here and not at the job level because we need the job to not be skipped,
        # since other jobs depend on it.
        if: ${{ vars.TELEMETRY_ENABLED == 'true' }}
        uses: rapidsai/shared-actions/telemetry-dispatch-stash-base-env-vars@main
  changed-files:
    secrets: inherit
    needs: telemetry-setup
    uses: rapidsai/shared-workflows/.github/workflows/changed-files.yaml@cuda13.0
    with:
      files_yaml: |
        test_cpp:
          - '**'
          - '!.devcontainer/**'
          - '!.pre-commit-config.yaml'
          - '!.shellcheckrc'
          - '!README.md'
          - '!ci/release/update-version.sh'
          - '!docs/**'
          - '!python/**'
        test_python:
          - '**'
          - '!.devcontainer/**'
          - '!.pre-commit-config.yaml'
          - '!.shellcheckrc'
          - '!README.md'
          - '!ci/release/update-version.sh'
          - '!docs/**'
  checks:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/checks.yaml@cuda13.0
    needs: telemetry-setup
    with:
      enable_check_generated_files: false
      ignored_pr_jobs: telemetry-summarize
  conda-cpp-build:
    needs: checks
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-build.yaml@cuda13.0
    with:
      build_type: pull-request
      script: ci/build_cpp.sh
  docs-build:
    needs: conda-cpp-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@cuda13.0
    with:
      build_type: pull-request
      node_type: "gpu-l4-latest-1"
      arch: "amd64"
      container_image: "rapidsai/ci-conda:25.10-latest"
      script: "ci/build_docs.sh"
  conda-cpp-tests:
    needs: [conda-cpp-build, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-tests.yaml@cuda13.0
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_cpp
    with:
      build_type: pull-request
      container-options: "--cap-add CAP_SYS_PTRACE --shm-size=8g --ulimit=nofile=1000000:1000000"
      script: ci/test_cpp.sh
  conda-python-tests:
    needs: [conda-cpp-build, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-tests.yaml@cuda13.0
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_python
    with:
      build_type: pull-request
      container-options: "--cap-add CAP_SYS_PTRACE --shm-size=8g --ulimit=nofile=1000000:1000000"
      script: ci/test_python.sh
  conda-python-distributed-tests:
    needs: [conda-cpp-build, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-tests.yaml@cuda13.0
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_python
    with:
      build_type: pull-request
      script: "ci/test_python_distributed.sh"
      container-options: "--cap-add CAP_SYS_PTRACE --shm-size=8g --ulimit=nofile=1000000:1000000"
  wheel-build-libucxx:
    needs: checks
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@cuda13.0
    with:
      build_type: pull-request
      script: ci/build_wheel_libucxx.sh
      # build for every combination of arch and CUDA version, but only for the latest Python
      matrix_filter: group_by([.ARCH, (.CUDA_VER|split(".")|map(tonumber)|.[0])]) | map(max_by(.PY_VER|split(".")|map(tonumber)))
      package-name: libucxx
      package-type: cpp
  wheel-build-ucxx:
    needs: wheel-build-libucxx
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@cuda13.0
    with:
      build_type: pull-request
      script: ci/build_wheel_ucxx.sh
      package-name: ucxx
      package-type: python
  wheel-tests-ucxx:
    needs: [wheel-build-ucxx, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@cuda13.0
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_python
    with:
      build_type: pull-request
      container-options: "--cap-add CAP_SYS_PTRACE --shm-size=8g --ulimit=nofile=1000000:1000000"
      script: ci/test_wheel_ucxx.sh
  wheel-build-distributed-ucxx:
    needs: checks
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@cuda13.0
    with:
      build_type: pull-request
      script: ci/build_wheel_distributed_ucxx.sh
      package-name: distributed_ucxx
      package-type: python
  wheel-tests-distributed-ucxx:
    needs: [wheel-build-ucxx, wheel-build-distributed-ucxx, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@cuda13.0
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_python
    with:
      build_type: pull-request
      container-options: "--cap-add CAP_SYS_PTRACE --shm-size=8g --ulimit=nofile=1000000:1000000"
      script: ci/test_wheel_distributed_ucxx.sh
  devcontainer:
    secrets: inherit
    needs: [checks, telemetry-setup]
    uses: rapidsai/shared-workflows/.github/workflows/build-in-devcontainer.yaml@cuda13.0
    with:
      arch: '["amd64", "arm64"]'
      cuda: '["13.0"]'
      node_type: "cpu8"
      rapids-aux-secret-1: GIST_REPO_READ_ORG_GITHUB_TOKEN
      env: |
        SCCACHE_DIST_MAX_RETRIES=inf
        SCCACHE_SERVER_LOG=sccache=debug
        SCCACHE_DIST_FALLBACK_TO_LOCAL_COMPILE=false
        SCCACHE_DIST_AUTH_TOKEN_VAR=RAPIDS_AUX_SECRET_1
      build_command: |
        sccache --zero-stats;
        build-all -j0 --verbose 2>&1 | tee telemetry-artifacts/build.log;
        sccache --show-adv-stats | tee telemetry-artifacts/sccache-stats.txt;
  telemetry-summarize:
    # This job must use a self-hosted runner to record telemetry traces.
    runs-on: linux-amd64-cpu4
    needs: pr-builder
    if: ${{ vars.TELEMETRY_ENABLED == 'true' && !cancelled() }}
    continue-on-error: true
    steps:
      - name: Telemetry summarize
        uses: rapidsai/shared-actions/telemetry-dispatch-summarize@main
    env:
      GH_TOKEN: ${{ github.token }}
